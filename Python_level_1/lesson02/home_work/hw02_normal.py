import random

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

list_1 = [2, -5, 8, 9, -25, 25, 4]
list_2 = [int(element ** 0.5) for element in list_1
          if element > 0 and float.is_integer(element ** 0.5)]

# Развернутый вариант
# list_2 = []
# for element in list_1:
#     if element > 0 and float.is_integer(element ** 0.5):
#         list_2.append(int(element ** 0.5))

print(list_2)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

date = '24.03.2017'
text_day = {'01': 'первое', '02': 'второе', '03': 'третье', '04': 'четвертое',
            '05': 'пятое', '06': 'шестое', '07': 'седьмое', '08': 'восьмое',
            '09': 'девятое', '10': 'десятое', '11': 'одиннадцатое', '12': 'двенадцатое',
            '13': 'тринадцатое', '14': 'четырнадцатое', '15': 'пятнадцатое',
            '16': 'шестнадцатое', '17': 'семнадцатое', '18': 'восемнадцатое',
            '19': 'девятнадцатое', '20': 'двадцатое', '2x': 'двадцать',
            '30': 'тридцатое', '3x': 'тридцать'}
text_month = {'01': 'января', '02': 'февраля', '03': 'марта', '04': 'апреля',
              '05': 'мая', '06': 'июня', '07': 'июля', '08': 'августа',
              '09': 'сентября', '10': 'октября', '11': 'ноября', '12': 'декабря'}
if int(date[0:2]) > 20 and int(date[0:2]) != 20 and int(date[0:2]) != 30:
    print(text_day[date[0:1] + 'x'], text_day['0' + date[1:2]],
          text_month[date[3:5]], date[6:], 'года')
else:
    print(text_day[date[0:2]], text_month[date[3:5]], date[6:], 'года')

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

n = 10
lis = [random.randint(-100, 100) for _ in range(n)]

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]

# тут не совсем понятно сформулирована цель.
# Список должен состоять из неповторяющихся элементов lst,
# тогда как 2 повторяется три раза, а 5 - два.
# Соответственно, если эти элементы повторяются, то по условию их не должно быть в
# новом списке. Но ориентируясь на ответ в примере имелось ввиду следующее:
# Новый список должен состоять из элементов исходного,
# но не содержать повторяющихся значений. Так сказать, отфильтровать дубли.
# Если я все правильно понял :)

lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = list(set(lst))

print(lst2)

# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

lst2 = [i for i in lst if lst.count(i) == 1]

print(lst2)
